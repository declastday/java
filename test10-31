/*	2024-10-25
	윈도우 계산기의 버튼 만들기
    2024-10-31
  계산기에 +, -, x, % 기능 추가
*/

import javax.swing.JFrame;
import javax.swing.*;
import java.awt.*;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;

public class TestM extends JFrame implements ActionListener {
	private JTextField display;
	private JPanel panel;       
	private String[] buttons = {
		"%", "CE", "C", "←", "1/x", "x²", "²√x", "÷",
	    "7", "8", "9", "×",
	    "4", "5", "6", "−",
	    "1", "2", "3", "+",
	    "+/−", "0", ".", "="
	};
	    
	private double firstNum = 0, secondNum = 0, result = 0;
	private char operator = ' ';

	public TestM() {
	    setTitle("계산기");
	    setSize(400, 700);
	    setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
	    setLayout(new BorderLayout());

	    display = new JTextField("0");
	    display.setEditable(false);
	    display.setPreferredSize(new Dimension(400, 100));
	    display.setFont(new Font("Arial", Font.PLAIN, 36));
	    display.setHorizontalAlignment(SwingConstants.RIGHT);
	    add(display, BorderLayout.NORTH);

	    panel = new JPanel();
	    panel.setLayout(new GridLayout(6, 4));
	    	for (String text : buttons) {
	        JButton button = new JButton(text);
	        button.setFont(new Font("Arial", Font.PLAIN, 24));
	        button.addActionListener(this);
	        panel.add(button);
	    }
	    add(panel, BorderLayout.CENTER);

	    setVisible(true);
	}

	public void actionPerformed(ActionEvent e) {
	    String command = e.getActionCommand();

	    switch (command) {
	        case "C":
	            display.setText("0");
	            firstNum = secondNum = result = 0;
	            operator = ' ';
	            break;
	        case "CE":
	            display.setText("0");
	            break;
	        case "←":
                String currentText = display.getText();
                if (currentText.length() > 0) {
                	currentText = currentText.substring(0, currentText.length() - 1);
                    if (currentText.isEmpty()) {
                        display.setText("0");
                    } else {
                        display.setText(currentText);
                    }
                }
                break;
	        case "=":
	            secondNum = Double.parseDouble(display.getText());
	            calculateResult();
	            display.setText(String.valueOf(result));
	            operator = ' ';
	            break;
	        case "+": case "−": case "×": case "÷":
	            firstNum = Double.parseDouble(display.getText());
	            operator = command.charAt(0);
	            display.setText("");
	            break;
	        default:
	            if (display.getText().equals("0")) {
	                display.setText(command);
	            } else {
	                display.setText(display.getText() + command);
	            }
	    }
	}
	    
	private void calculateResult() {
	    switch (operator) {
	        case '+':
	            result = firstNum + secondNum;
	            break;
	        case '−':
	            result = firstNum - secondNum;
	            break;
	        case '×':
	            result = firstNum * secondNum;
	            break;
	        case '÷':
	            if (secondNum != 0) {
	                result = firstNum / secondNum;
	            } else {
	                display.setText("Error");
	            }
	            break;
	    }
	}


	public static void main(String[] args) {
		new TestM();

	}

}
