/*	2024-10-25
	윈도우 계산기의 버튼 만들기
    2024-10-31
  계산기에 +, -, x, ÷ 기능 추가
    2024-11-1
  계산기에 x² 기능 추가
  ²√x 기능 추가
*/

import java.awt.BorderLayout;
import java.awt.Dimension;
import java.awt.Font;
import java.awt.GridLayout;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;

import javax.swing.JButton;
import javax.swing.JFrame;
import javax.swing.JPanel;
import javax.swing.JTextField;
import javax.swing.SwingConstants;

public class Test3 extends JFrame implements ActionListener {
    private JTextField display;  // 결과 출력 화면
    private JPanel panel;        // 버튼 패널
    private String[] buttons = { // 버튼 배열
        "%", "CE", "C", "←", "1/x", "x²", "²√x", "÷",
        "7", "8", "9", "×",
        "4", "5", "6", "−",
        "1", "2", "3", "+",
        "+/−", "0", ".", "="
    };

    private double firstNum = 0, secondNum = 0, result = 0;
    private char operator = ' ';

    public Test3() {
        setTitle("계산기");
        setSize(400, 700);   // 계산기 크기
        setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
        setLayout(new BorderLayout());

        display = new JTextField("0");
        display.setEditable(false);
        display.setPreferredSize(new Dimension(400, 100)); // 결과 화면 크기
        display.setFont(new Font("Arial", Font.PLAIN, 36));
        display.setHorizontalAlignment(SwingConstants.RIGHT);
        add(display, BorderLayout.NORTH);

        panel = new JPanel();
        panel.setLayout(new GridLayout(6, 4)); // 6행 4열의 그리드 레이아웃
        for (String text : buttons) {
            JButton button = new JButton(text);
            button.setFont(new Font("Arial", Font.PLAIN, 24));
            button.addActionListener(this); // 버튼마다 액션 추가
            panel.add(button);
        }
        add(panel, BorderLayout.CENTER);

        setVisible(true);
    }

    public void actionPerformed(ActionEvent e) {
        String command = e.getActionCommand(); // 눌린 버튼의 텍스트 표시

        switch (command) {
            case "C":
                display.setText("0");
                firstNum = secondNum = result = 0;
                operator = ' ';
                break;
            case "CE":
                display.setText("0");
                break;
            case "←":
                // 텍스트의 마지막 문자를 삭제
                // @see chat gpt 문자 지우는 방법 참고
                String currentText = display.getText();
                if (currentText.length() > 0) {
                    // 문자를 전부 지우면 0으로 표시
                    currentText = currentText.substring(0, currentText.length() - 1);
                    if (currentText.isEmpty()) {
                        display.setText("0");
                    } else {
                        display.setText(currentText);
                    }
                }
                break;
            case "=":
                secondNum = Double.parseDouble(display.getText());
                calculateResult();
                display.setText(String.valueOf(result));
                operator = ' ';
                break;
            case "+":
            case "−": 
            case "×": 
            case "÷":
                firstNum = Double.parseDouble(display.getText());
                operator = command.charAt(0);
                display.setText("");
                break;
                // @see chat gpt 제곱, 제곱근 계산하는 방법 참고
            case "x²":  // 제곱 버튼
                firstNum = Double.parseDouble(display.getText());
                result = Math.pow(firstNum, 2);
                display.setText(String.valueOf(result));
                break;
                case "²√x":  // 제곱근 버튼
                firstNum = Double.parseDouble(display.getText());
                if (firstNum >= 0) {
                    result = Math.sqrt(firstNum);
                    display.setText(String.valueOf(result));
                } else {
                    display.setText("Error"); // 값이 음수면 에러 표시
                }
                break;
            default:
                if (display.getText().equals("0")) {
                    display.setText(command);
                } else {
                    display.setText(display.getText() + command);
                }
        }
    }
    
    // 계산
    private void calculateResult() {
        switch (operator) {
            case '+':
                result = firstNum + secondNum;
                break;
            case '−':
                result = firstNum - secondNum;
                break;
            case '×':
                result = firstNum * secondNum;
                break;
            case '÷':
                if (secondNum != 0) {
                    result = firstNum / secondNum;
                } else {
                    display.setText("Error");
                }
                break;
        }
    }

    public static void main(String[] args) {
        new Test3();
    }
}
